From b4a5e883c7f1045c0a8257934f98915b48dea545 Mon Sep 17 00:00:00 2001
From: Ron Lieberman <ron.lieberman@amd.com>
Date: Thu, 1 Jun 2023 13:19:28 -0500
Subject: [PATCH] [llvm] change from Optional to std::optional in support of
 pending llvm patch

Change-Id: If8a03245dc88e7b7e4a628d7ce7e28c71c3268c6
---
 lib/comgr/src/comgr-env.cpp           | 2 +-
 lib/comgr/src/comgr-env.h             | 3 +--
 lib/comgr/src/comgr-objdump.cpp       | 5 ++---
 lib/comgr/src/comgr.cpp               | 2 +-
 lib/comgr/src/time-stat/time-stat.cpp | 3 +--
 5 files changed, 6 insertions(+), 9 deletions(-)

diff --git a/lib/comgr/src/comgr-env.cpp b/lib/comgr/src/comgr-env.cpp
index 6ab6f0f446e7f3..75753947ebfe23 100644
--- a/lib/comgr/src/comgr-env.cpp
+++ b/lib/comgr/src/comgr-env.cpp
@@ -50,7 +50,7 @@ bool shouldSaveTemps() {
   return SaveTemps && StringRef(SaveTemps) != "0";
 }
 
-Optional<StringRef> getRedirectLogs() {
+std::optional<StringRef> getRedirectLogs() {
   static char *RedirectLogs = getenv("AMD_COMGR_REDIRECT_LOGS");
   if (!RedirectLogs || StringRef(RedirectLogs) == "0") {
     return std::nullopt;
diff --git a/lib/comgr/src/comgr-env.h b/lib/comgr/src/comgr-env.h
index aef57b3c5878c1..7ca644e754e5d1 100644
--- a/lib/comgr/src/comgr-env.h
+++ b/lib/comgr/src/comgr-env.h
@@ -36,7 +36,6 @@
 #ifndef COMGR_ENV_H
 #define COMGR_ENV_H
 
-#include "llvm/ADT/Optional.h"
 #include "llvm/ADT/StringRef.h"
 
 namespace COMGR {
@@ -47,7 +46,7 @@ bool shouldSaveTemps();
 
 /// If the environment requests logs be redirected, return the string identifier
 /// of where to redirect. Otherwise return @p None.
-llvm::Optional<llvm::StringRef> getRedirectLogs();
+std::optional<llvm::StringRef> getRedirectLogs();
 
 /// Return whether the environment requests verbose logging.
 bool shouldEmitVerboseLogs();
diff --git a/lib/comgr/src/comgr-objdump.cpp b/lib/comgr/src/comgr-objdump.cpp
index ff3f9960e721a0..cae7aa362542f4 100644
--- a/lib/comgr/src/comgr-objdump.cpp
+++ b/lib/comgr/src/comgr-objdump.cpp
@@ -39,7 +39,6 @@
 #include "comgr-objdump.h"
 #include "comgr.h"
 #include "lld/Common/TargetOptionsCommandFlags.h"
-#include "llvm/ADT/Optional.h"
 #include "llvm/ADT/STLExtras.h"
 #include "llvm/ADT/StringExtras.h"
 #include "llvm/CodeGen/CommandFlags.h"
@@ -2145,7 +2144,7 @@ void llvm::DisassemHelper::printRawClangAST(const ObjectFile *Obj) {
     ClangASTSectionName = "clangast";
   }
 
-  Optional<object::SectionRef> ClangASTSection;
+  std::optional<object::SectionRef> ClangASTSection;
   for (auto Sec : toolSectionFilter(*Obj)) {
     StringRef Name;
     auto NameOrErr = Sec.getName();
@@ -2188,7 +2187,7 @@ void llvm::DisassemHelper::printFaultMaps(const ObjectFile *Obj) {
     return;
   }
 
-  Optional<object::SectionRef> FaultMapSection;
+  std::optional<object::SectionRef> FaultMapSection;
 
   for (auto Sec : toolSectionFilter(*Obj)) {
     StringRef Name;
diff --git a/lib/comgr/src/comgr.cpp b/lib/comgr/src/comgr.cpp
index e421414eb79a22..9e89dc211d6fef 100644
--- a/lib/comgr/src/comgr.cpp
+++ b/lib/comgr/src/comgr.cpp
@@ -1293,7 +1293,7 @@ amd_comgr_status_t AMD_COMGR_API
     // Pointer to the currently selected log stream.
     raw_ostream *LogP = &LogS;
 
-    if (Optional<StringRef> RedirectLogs = env::getRedirectLogs()) {
+    if (std::optional<StringRef> RedirectLogs = env::getRedirectLogs()) {
       StringRef RedirectLog = *RedirectLogs;
       if (RedirectLog == "stdout") {
         LogP = &outs();
diff --git a/lib/comgr/src/time-stat/time-stat.cpp b/lib/comgr/src/time-stat/time-stat.cpp
index 1df3f0e96b739f..9b24983c3b360c 100644
--- a/lib/comgr/src/time-stat/time-stat.cpp
+++ b/lib/comgr/src/time-stat/time-stat.cpp
@@ -5,7 +5,6 @@
 #include <system_error>
 
 #include "comgr-env.h"
-#include "llvm/ADT/Optional.h"
 #include "llvm/ADT/StringRef.h"
 #include "llvm/Support/Debug.h"
 #include "llvm/Support/FileSystem.h"
@@ -29,7 +28,7 @@ static std::unique_ptr<PerfStats> PS = nullptr;
 static void dump() { PS->dumpPerfStats(); }
 
 void GetLogFile(std::string &PerfLog) {
-  if (Optional<StringRef> RedirectLogs = env::getRedirectLogs()) {
+  if (std::optional<StringRef> RedirectLogs = env::getRedirectLogs()) {
     PerfLog = (*RedirectLogs).str();
     return;
   }
